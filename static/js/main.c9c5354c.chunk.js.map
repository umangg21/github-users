{"version":3,"sources":["component/Style.ts","component/SearchUserView.tsx","component/RepositoryView.tsx","component/UserProfile.tsx","component/Main.tsx","index.tsx"],"names":["styles","searchUser","MainHeader","height","searchUserImage","searchUserCard","minHeight","margin","padding","profileImage","repoName","fontSize","color","cursor","userName","textDecoration","inProgress","width","repoDesc","userDesc","marginLeft","repoHead","UserDetail","SearchUserView","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","viewProfile","setViewProfile","state","UserMainInfo","componentDidMount","requestUrl","userInfo","url","fetch","then","response","json","myJson","setState","inherits","createClass","key","value","react_default","a","createElement","Fragment","index_es","style","onClick","className","src","avatar_url","name","login","React","Component","RepositoryView","repoinfo","description","UserProfile","getRepositoryList","repositoryList","console","log","map","repository","component_RepositoryView","getRepositories","concat","repos_url","sortedParameter","handleChange","event","sortedParameterString","target","spinner","variant","htmlFor","onChange","input","labelWidth","id","Main","newSearchString","serachString","handleKeyPress","findUsers","UserList","items","getUser","user","component_SearchUserView","visiblePage","visibleUserProfile","viewPage","userList","label","onKeyPress","component_UserProfile","ReactDOM","render","component_Main","document","getElementById"],"mappings":"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","file":"static/js/main.c9c5354c.chunk.js","sourcesContent":["export const styles = {\r\n\r\n    searchUser: {\r\n\r\n    },\r\n\r\n    MainHeader: {\r\n        height: `2rem`\r\n    },\r\n\r\n    searchUserImage: {\r\n        height: `70px`\r\n    },\r\n\r\n    searchUserCard: {\r\n        minHeight: `4rem`,\r\n        margin: `10px`,\r\n        padding: `10px`\r\n    },\r\n\r\n    profileImage: {\r\n        height: `15rem`\r\n    },\r\n\r\n    repoName: {\r\n        fontSize: `x-large`,\r\n        color: `#0366D6`,\r\n        cursor: `pointer`,\r\n    },\r\n       \r\n    userName: {\r\n        fontSize: `x-large`,\r\n        color: `#0366D6`,\r\n        cursor: `pointer`,\r\n        textDecoration: `underline`,\r\n    },\r\n\r\n    inProgress: {\r\n        color: `#0366D6`,\r\n        width: `70px`,\r\n        height: `70px`\r\n    },\r\n\r\n    repoDesc: {\r\n        color: `gray`,\r\n    },\r\n\r\n    userDesc: {\r\n        color: `gray`,\r\n        marginLeft: `15px`,\r\n    },\r\n\r\n    repoHead: {\r\n        color: `darkslategray`,\r\n        fontSize: `xx-large`,\r\n        margin: `15px`\r\n    },\r\n\r\n     UserDetail: {\r\n        margin: `10px`\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { ButtonBase, Button, CardActionArea, Card } from '@material-ui/core';\r\nimport { styles } from './Style';\r\n\r\ninterface ISearchUserViewProps {\r\n    userInfo: any;\r\n    setViewProfile: Function;\r\n}\r\n\r\ninterface ISearchUserViewStates {\r\n\r\n    UserMainInfo: any;\r\n}\r\n\r\n\r\nexport class SearchUserView extends React.Component<ISearchUserViewProps, ISearchUserViewStates> {\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = { UserMainInfo: {} }\r\n    }\r\n\r\n    viewProfile = () => {\r\n        this.props.setViewProfile(this.state.UserMainInfo)\r\n    }\r\n\r\n    componentDidMount = () => {\r\n\r\n        let requestUrl = this.props.userInfo.url\r\n        fetch(requestUrl)\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((myJson: any) => {\r\n                this.setState({ UserMainInfo: myJson })\r\n            });\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Card style={styles.searchUserCard} onClick={this.viewProfile}>\r\n                    <div className=\"layout-row\">\r\n                        <div>\r\n                            <img src={this.state.UserMainInfo.avatar_url} style={styles.searchUserImage}></img>\r\n                        </div>\r\n                        <div className=\"layout-column layout-align-space-between-start\" style={styles.UserDetail}>\r\n                            <a onClick={this.viewProfile}><span style={styles.userName}>{this.state.UserMainInfo.name}</span></a>\r\n                            <span style={styles.repoDesc}>{this.state.UserMainInfo.login}</span>\r\n\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchUserView;","import React from 'react';\r\nimport { CardActionArea, Card } from '@material-ui/core';\r\nimport { styles } from './Style';\r\n\r\ninterface IRepositoryViewProps {\r\n    repoinfo: any;\r\n}\r\n\r\ninterface IRepositoryViewStates {\r\n}\r\n\r\n\r\nexport class RepositoryView extends React.Component<IRepositoryViewProps, IRepositoryViewStates> {\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Card style={styles.searchUserCard}>\r\n                    <div className=\"layout-column layout-align-space-between-start\">\r\n                        <a><span style={styles.repoName}>{this.props.repoinfo.name}</span></a>\r\n                        <span style={styles.repoDesc}>{this.props.repoinfo.description}</span>\r\n\r\n                    </div>\r\n                </Card>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RepositoryView;","import React from 'react';\r\nimport RepositoryView from './RepositoryView';\r\nimport { styles } from './Style';\r\nimport { FormControl, InputLabel, Select, MenuItem, OutlinedInput, Card, CircularProgress } from '@material-ui/core';\r\n\r\ninterface IUserProfileProps {\r\n    userInfo: any;\r\n}\r\n\r\ninterface IUserProfileStates {\r\n    repositoryList: any;\r\n    sortedParameter: string;\r\n    inProgress: boolean;\r\n}\r\n\r\n\r\nexport class UserProfile extends React.Component<IUserProfileProps, IUserProfileStates> {\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n        //let repositories = this.getRepositories()\r\n        this.state = { repositoryList: null, sortedParameter: \"full_name\", inProgress: true }\r\n        this.getRepositories()\r\n    }\r\n\r\n    getRepositoryList = () => {\r\n        if (this.state.repositoryList) {\r\n            console.log(this.state.repositoryList)\r\n            return this.state.repositoryList.map((repository: any) => (\r\n                <RepositoryView\r\n                    repoinfo={repository}\r\n                />\r\n            ))\r\n        }\r\n    }\r\n\r\n\r\n    getRepositories = () => {\r\n        this.setState({ inProgress: true })\r\n\r\n        let requestUrl = `${this.props.userInfo.repos_url}?sort=${this.state.sortedParameter}`\r\n        fetch(requestUrl)\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((myJson: any) => {\r\n                this.setState({ repositoryList: myJson, inProgress: false })\r\n            });\r\n    }\r\n\r\n    handleChange = (event: any) => {\r\n        let sortedParameterString = event.target.value\r\n        this.setState({ sortedParameter: sortedParameterString })\r\n        this.getRepositories()\r\n    }\r\n\r\n    render() {\r\n\r\n        let spinner = (\r\n            <div className=\"layout-column layout-align-center-center\">\r\n                <CircularProgress style={styles.inProgress} />\r\n            </div>\r\n        )\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"layout-row\">\r\n                    <div className=\"flex-25 layout-column\">\r\n                        <Card>\r\n                            <img src={this.props.userInfo.avatar_url} style={styles.profileImage}></img>\r\n                        </Card>\r\n                        <span style={styles.repoHead}>{this.props.userInfo.name}</span>\r\n                        <span style={styles.userDesc}>{this.props.userInfo.login}</span>\r\n                    </div>\r\n                    <div className=\"flex-75 layout-column\">\r\n                        <div className=\"layout-row layout-align-space-between-center\">\r\n                            <span style={styles.repoHead}>{`Repositories`}</span>\r\n                            <FormControl variant=\"outlined\" >\r\n                                <InputLabel\r\n                                    htmlFor=\"outlined-sort-simple\"\r\n                                >\r\n                                    Sort\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={this.state.sortedParameter}\r\n                                    onChange={this.handleChange}\r\n                                    input={\r\n                                        <OutlinedInput\r\n                                            labelWidth={30}\r\n                                            name=\"sort\"\r\n                                            id=\"outlined-sort-simple\"\r\n                                        />\r\n                                    }\r\n                                >\r\n                                    <MenuItem value={\"full_name\"}>Name</MenuItem>\r\n                                    <MenuItem value={\"created\"}>Created Date</MenuItem>\r\n                                    <MenuItem value={\"updated\"}>Updated Date</MenuItem>\r\n                                    <MenuItem value={\"pushed\"}>Pushed Date</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        {this.state.inProgress ? spinner : this.getRepositoryList()}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserProfile;","import React from 'react';\r\nimport { TextField, CircularProgress } from '@material-ui/core';\r\nimport { styles } from './Style';\r\nimport SearchUserView from './SearchUserView';\r\nimport UserProfile from './UserProfile';\r\n\r\ninterface IMainProps {\r\n}\r\n\r\ninterface IMainStates {\r\n    UserList: any,\r\n    serachString: any,\r\n    visiblePage: number, // 0 = Home, 1 = ViewProfile\r\n    visibleUserProfile: any\r\n    inProgress: boolean,\r\n}\r\n\r\nexport class Main extends React.Component<IMainProps, IMainStates> {\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n\r\n        this.state = { serachString: \"\", UserList: [], visiblePage: 0, visibleUserProfile: {}, inProgress: false }\r\n\r\n    }\r\n\r\n    handleChange = (event: any) => {\r\n        let newSearchString = event.target.value\r\n        this.setState({ serachString: newSearchString })\r\n    }\r\n\r\n    handleKeyPress = (event: any) => {\r\n        if (event.key === 'Enter') {\r\n            this.findUsers()\r\n        }\r\n    }\r\n\r\n    findUsers = () => {\r\n        this.setState({ inProgress: true })\r\n\r\n        let requestUrl = `https://api.github.com/search/users?q=${this.state.serachString}`\r\n\r\n        fetch(requestUrl)\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((myJson: any) => {\r\n                this.setState({ UserList: myJson.items, inProgress: false })\r\n            });\r\n\r\n    }\r\n\r\n    getUser = () => {\r\n        return this.state.UserList.map((user: any) => (\r\n            < SearchUserView\r\n                userInfo={user}\r\n                setViewProfile={this.setViewProfile}\r\n            />\r\n        ))\r\n    }\r\n\r\n    setViewProfile = (userInfo: any) => {\r\n        this.setState({ visiblePage: 1, visibleUserProfile: userInfo })\r\n    }\r\n\r\n    render() {\r\n        var viewPage;\r\n        let spinner = (\r\n            <div className=\"layout-column layout-align-center-center\">\r\n                <CircularProgress style={styles.inProgress} />\r\n            </div>\r\n        )\r\n\r\n        if (this.state.visiblePage == 0) {\r\n            let userList = this.getUser()\r\n            viewPage = (\r\n                <React.Fragment>\r\n                    <div className=\"layout-row layout-align-start-center\" style={styles.searchUser}>\r\n                        <TextField\r\n                            id=\"outlined-search\"\r\n                            label=\"Find a member...\"\r\n                            value={this.state.serachString}\r\n                            onChange={this.handleChange}\r\n                            onKeyPress={this.handleKeyPress}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <span style={styles.userDesc}>Enter Name in text field and press Enter Key</span>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"flex-90\" >\r\n                        {this.state.inProgress ? spinner : userList}\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        else {\r\n            viewPage = (\r\n                <UserProfile\r\n                    userInfo={this.state.visibleUserProfile}\r\n                />\r\n            )\r\n        }\r\n\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"flex layout-row\">\r\n                    <div className=\"flex-15 layout-row\"></div>\r\n                    <div className=\"flex-70 layout-column\" >\r\n                        <div style={styles.MainHeader}></div>\r\n                        {viewPage}\r\n\r\n                    </div>\r\n                    <div className=\"flex-15 layout-row\"></div>\r\n\r\n                </div>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './component/Main';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n"],"sourceRoot":""}